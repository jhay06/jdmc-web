import jquery

from browser import window,alert
jq=window.jQuery
from validations.base_validation import BaseValidation
import json
class ForgotPassword:
    def __init__(self) -> None:
        validators={"validate":['password'],"validator":"validate"}
        jq.post("/modules/api_cable/get_validator_cable.php",validators,self.validator_ready).fail(self.validator_failed)
    
    def validator_ready(self,res,status,xhr):
        if status=='success':
            try:
                result=json.loads(res)
                if result['status']=='success':
                    self.open_cable(has_validator=True,validator=result['data'])
                else:
                    alert(result['message'])
            except:
                alert('Could not connect to server')
    def open_cable(self,has_validator=False,validator=[]):
        if not has_validator:
            alert('Connection to the server was not established')
            return False
        jq('button[name=change_password]').click(lambda e,base_validator=BaseValidation(validator):self.save_changes_click(e,base_validator))
    def save_changes_click(self,e,base_validator:BaseValidation=None):
        e.preventDefault()
        if base_validator is None:
            alert('Connection to the server was not established')
            return False
        new_password=jq('input[name=new_password]').val()
        email_address=jq('input[name=email_address]').val()
        username=jq('input[name=username]').val()
        reset_key=jq('input[name=reset_key]').val()
        confirm_password=jq('input[name=confirm_password]').val()
        if not new_password:
            alert('Please input new password')
            return False
        
        if not confirm_password:
            alert('Please input confirm password')
            return False
        
        valid_password=base_validator.validate('password',new_password)
        if valid_password is not None:
            alert(valid_password)
            return False
        data={
            'change_password':'ok',
            'username':username,
            'email_address':email_address,
            'reset_key':reset_key,
            'new_password':new_password

        }
        jq.post('/modules/api_cable/change_password_forgot.php',data
            ,self.change_password_con_ok
        ).fail(self.change_password_con_failed)
        
    def change_password_con_ok(e,res,status,xhr):
        if status=='success':
            try:
                res_data=json.loads(res)
                if res_data['status']=='success':
                    alert('success')
                else:
                    alert(res_data['message'])
            except:
                alert('Unknown error, Plase try again')
    
    def change_password_con_failed(e,res):
        alert('Connection to the server not established')
    def validator_failed(self,res):
        self.open_cable()
    
    def click_change_password(self,e):
        e.preventDefault()
        