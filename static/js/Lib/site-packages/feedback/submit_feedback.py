import jquery
from browser import window,alert, confirm
import json
from validations.base_validation import BaseValidation

from utils.loader import Loader
jq=window.jQuery
class SubmitFeedback:
    def __init__(self) -> None:
        self.loader= Loader()
        validators={"validate":['full_name','contact_number','email_address','message'],"validator":"validate"}
        jq.post("/modules/api_cable/get_validator_cable.php",validators,self.validator_ready).fail(self.validator_failed)
    def validator_ready(self,res,status,xhr):
        if status=='success':
            try:
                
                result=json.loads(res)
                if result['status']=='success':
                    self.open_cable(has_validator=True,validator=result['data'])
                else:
                    self.loader.close_loader()
                    alert(result['message'])
            except:
                self.loader.close_loader()
                alert('Could not connect to server')
    def validator_failed(self,res):
        self.open_cable()
    
    def open_cable(self,has_validator=False,validator=[]):
        self.loader.close_loader()

        if not has_validator:
            alert('Connection to the server was not established')
            return False
        jq("input[name=submit_feedback]").unbind("click")
        jq('input[name=submit_feedback]').bind("click",lambda e,base_validator=BaseValidation(validator):self.save_changes_click(e,base_validator))
    
    def save_changes_click(self,e,base_validator:BaseValidation=None):

        e.preventDefault()
        if base_validator is None:
            alert('Connection to the server was not established')
            return False
        full_name=jq("input[name=full_name]").val()
        contact_no=jq("input[name=contact_no").val()
        email_address=jq("input[name=email_address]").val()
        message=jq("textarea[name=message]").val()
        if not full_name:
            alert('Please type your full name')
            return
        if not contact_no:
            alert('Please type your contact number')
            return 
        if not email_address:
            alert('Please type your email address')
            return 
        if not message:
            alert('Please type your message')
            return 
        
        validated=[
            base_validator.validate('full_name',full_name),
            base_validator.validate('contact_number',contact_no),
            base_validator.validate('email_address',email_address),
            base_validator.validate('message', message)
        ]
        for x in validated:
            if x is not None:
                alert(x)
                return
        data_val={
            'submit_feedback':'ok',
            'full_name':full_name,
            'contact_no':contact_no,
            'email_address':email_address,
            'message':message
        }
        conf=confirm('Submit message?')
        if conf:
            self.loader.show_loader()
            jq.post('/modules/api_cable/submit_feedback_cable.php',data_val,self.add_feedback_con_ok).fail(self.add_feedback_con_failed)

    def add_feedback_con_failed(self,res,status,xhr):
        self.loader.close_loader()
        alert('Connection to server not established')
        #loader.close_loader()

    def add_feedback_con_ok(self,res,status,xhr):
        self.loader.close_loader()
        if status=='success':
            result=json.loads(res)
            if result['status'] != 'success':
                alert(result['message'])
                #loader.close_loader()
                return False
            else:
                alert(result['message'])
                self.loader.show_loader()
                window.location.reload()
        else:
            alert('Connection error')
            #loader.close_loader()
 
