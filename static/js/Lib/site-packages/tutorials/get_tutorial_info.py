import jquery
from browser import window,alert
jq=window.jQuery
import json
class GetTutorialInfoResponse:
    def __init__(self,youtube_id=None, loaded=False, message=None) -> None:
        
        self.youtube_id=youtube_id
        self.loaded=loaded
        self.message=message

class GetTutorialInfo:
    def __init__(self,youtube_id) -> None:
       
        self.cable="/modules/api_cable/get_tutorial_info_cable.php"
        self.youtube_id=youtube_id
        self.video_title_element=None
        self.youtube_link_element=None
        self.__onload=None
    def on_load(self,cb):
        self.__onload=cb
    def set_video_title_element(self,element):
        self.video_title_element=element
    
    def set_youtube_link_element(self,element):
        self.youtube_link_element=element
    def tutorial_info_load_complete(self,res,status,xhr):
        if status=='success':
            try:
                js=json.loads(res)
                if js['status']=='success':
                    data=js['data']
                    if self.video_title_element is not None:
                        jq(self.video_title_element).text(data['video_title'])
                    if self.youtube_link_element is not None:
                        jq(self.youtube_link_element).attr('src',"https://youtube.com/embed/{youtube_id}".format(youtube_id= data['youtube_id']))
                    if self.__onload is not None:
                        self.__onload(GetTutorialInfoResponse(
                            youtube_id=self.youtube_id,
                            message='Got info',
                            loaded=True
                        ))
                else:
                    if self.__onload is not None:
                        self.__onload(GetTutorialInfoResponse(
                            youtube_id=self.youtube_id,
                            message=js['message'],
                            loaded=False
                        ))
            except:
                if self.__onload is not None:
                    self.__onload(GetTutorialInfoResponse(
                        youtube_id=self.youtube_id,
                        message='Parse error',
                        loaded=False
                     ))
        else:
            if self.__onload is not None:
                self.__onload(GetTutorialInfoResponse(
                    youtube_id=self.youtube_id,
                    message='Unable to get data',
                    loaded=False
                ))
    def tutorial_info_load_failed(self,res,status,xhr):
        if self.__onload is not None:
            self.__onload(GetTutorialInfoResponse(
                loaded=False,
                youtube_id=self.youtube_id,
                message='Connection to the server not established'
            ))

    def start_load(self):
        data={
            'get_tutorial':'ok',
            'youtube_id':self.youtube_id
        }
        jq.post(self.cable,data,self.tutorial_info_load_complete).fail(self.tutorial_info_load_failed)
