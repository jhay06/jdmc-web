from utils.file_reader import FileUploadReader
from validations.base_validation import BaseValidation
from utils.file_reader import FileUploadReader,FileModel
import jquery
from browser import window,alert,confirm
import json
jq=window.jQuery
from utils.loader import Loader

class UpdateTutorial:
    def __init__(self) -> None:
        self.loader=Loader()
        validators={"validate":['youtube_id','video_title','youtube_link','video_description'],"validator":"validate"}
        jq.post("/modules/api_cable/get_validator_cable.php",validators,self.validator_ready).fail(self.validator_failed)
    
    def validator_ready(self,res,status,xhr):
        if status=='success':
            try:
                
                result=json.loads(res)
                if result['status']=='success':
                    self.open_cable(has_validator=True,validator=result['data'])
                else:
                    self.loader.close_loader()
                    alert(result['message'])
            except:
                self.loader.close_loader()
                alert('Could not connect to server')
    def validator_failed(self,res):
        self.open_cable()
    def open_cable(self,has_validator=False,validator=[]):
        self.loader.close_loader()
        if not has_validator:
            alert('Connection to the server was not established')
            return False
        jq("input[name=add_tutorial]").unbind("click")
        jq('input[name=add_tutorial]').bind("click",lambda e,base_validator=BaseValidation(validator):self.save_changes_click(e,base_validator))
    
    def save_changes_click(self,e,base_validator:BaseValidation=None):

        e.preventDefault()
     
        if base_validator is None:
            alert('Connection to the server was not established')
            return False
        video_id=jq("input[name=video_id]").val()

        youtube_id=jq("input[name=youtube_id]").val()
        video_title=jq("input[name=video_title").val()
        youtube_link=jq("input[name=youtube_link]").val()
        video_description=jq("textarea[name=video_description]").val()
       
        if not youtube_id:
            alert('Please input youtube id')
            return
        if not video_title:
            alert('Please input video title')
            return
        if not youtube_link:
            alert('Please input youtube link')
            return
        if not video_description:
            alert('Please input video description')
            return
        validate=[
            base_validator.validate('youtube_id',youtube_id),
            base_validator.validate('video_title',video_title),
            base_validator.validate('youtube_link',youtube_link),
            base_validator.validate('video_description',video_description)
        ]
        for x in validate:
            if x is not None:
                alert(x)
                return
       
       
        data_val={
            'update_tutorial':'ok',
            'video_id':video_id,
            'youtube_id':youtube_id,
            'video_title':video_title,
            'youtube_link':youtube_link,
            'video_description':video_description
        }
        conf=confirm('Update this Tutorial? ')
        if conf:
            self.loader.show_loader()
            jq.post('/modules/api_cable/update_tutorial_cable.php',data_val,self.update_tutorial_con_ok).fail(self.update_tutorial_con_failed)

    def update_tutorial_con_failed(self,res,status,xhr):
        self.loader.close_loader()
        alert('Connection to server not established')
        #loader.close_loader()

    def update_tutorial_con_ok(self,res,status,xhr):
        self.loader.close_loader()
        if status=='success':
            result=json.loads(res)
            if result['status'] != 'success':
                alert(result['message'])
                #loader.close_loader()
                return False
            else:
                alert(result['message'])
                youtube_id=jq("input[name=youtube_id]").val()
                self.loader.show_loader()
                window.location.href="/tutorials/{youtube_id}/edit".format(youtube_id=youtube_id)
                
        else:
            alert('Connection error')
            #loader.close_loader()