import jquery
import json
from browser import window
from utils.loader import Loader
jq=window.jQuery
class DeletePromotionResponse:
    def __init__(self,
                status=None,
                message=None,
                *args,
                **kwargs):
        self.status=status
        self.message=message
        

class DeletePromotion:
    def __init__(self) -> None:
        self.cable='/modules/api_cable/delete_promotion_cable.php'
        self.__onload=None
        self.loader=Loader()
    
    def on_load(self,cb):
        self.__onload=cb
    def on_ok_load(self,res,status,xhr):
        self.loader.close_loader()
        if status == 'success':
            try:
                js=json.loads(res)
                if self.__onload is not None:
                    self.__onload(DeletePromotionResponse(**js))
            except:
                if self.__onload is not None:
                    self.__onload(DeletePromotionResponse(
                        status='error',
                        message='Unknown error, Please try again'
                    ))
        else:
            if self.__onload is not None:
                self.__onload(DeletePromotionResponse(
                    status='error',
                    message='Connection to the server not established'
                ))
    def on_failed_load(self,res,status,xhr):
        self.loader.close_loader()
        if self.__onload is not None:
            self.__onload(DeletePromotionResponse(
                status='error',
                message='Connection to the server not established'
            ))
    def process_delete(self,promotion_id=0):
        if promotion_id == 0:
            if self.__onload is not None:
                self.__onload(DeletePromotionResponse(
                    status='failed',
                    message='Please select item to delete'
                ))
                return
        data={
            'delete_promotion':'ok',
            'promotion_id':promotion_id
        }
        self.loader.show_loader()
        jq.post(self.cable,data,self.on_ok_load).fail(self.on_load)

    
