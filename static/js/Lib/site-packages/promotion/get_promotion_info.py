import jquery
from browser import window,alert
jq=window.jQuery
import json
class GetPromotionInfoResponse:
    def __init__(self,image_id=None, loaded=False, message=None) -> None:
        
        self.image_id=image_id
        self.loaded=loaded
        self.message=message

class GetPromotionInfo:
    def __init__(self,image_id) -> None:
       
        self.cable="/modules/api_cable/get_promotion_info.php"
        self.image_id = image_id
        self.image_element=None
        self.promotion_label_element=None
        self.promotion_description_element=None
        self.__onload=None
    def on_load(self,cb):
        self.__onload=cb
    def set_image_element(self,element):
        self.image_element=element
    def set_product_label_element(self,element):
        self.product_label_element=element
    def set_product_description_element(self,element):
        self.product_description_element=element
    def product_info_load_complete(self,res,status,xhr):
        if status=='success':
            try:
                js=json.loads(res)
                if js['status']=='success':
                    data=js['data']
                    if self.product_label_element is not None:
                        jq(self.product_label_element).text(data['product_name'])
                    if self.product_description_element is not None:
                        jq(self.product_description_element).text(data['product_description'])
                    if self.image_element is not None:
                        image_el=jq(self.image_element)
                        image_el.attr('src',"data:{file_content_type};base64, {file_content}".format(
                            file_content_type=data['file_content_type'],
                            file_content=data['file_content']
                        ))
                        image_el.attr('file_name',data['file_name'])
                    if self.__onload is not None:
                        self.__onload(GetProductInfoResponse(
                            product_code=self.product_code,
                            message='Got info',
                            loaded=True
                        ))
                else:
                    if self.__onload is not None:
                        self.__onload(GetProductInfoResponse(
                            product_code=self.product_code,
                            message=js['message'],
                            loaded=False
                        ))
            except:
                if self.__onload is not None:
                    self.__onload(GetProductInfoResponse(
                        product_code=self.product_code,
                        message='Parse error',
                        loaded=False
                     ))
        else:
            if self.__onload is not None:
                self.__onload(GetProductInfoResponse(
                    product_code=self.product_code,
                    message='Unable to get data',
                    loaded=False
                ))
    def product_info_load_failed(self,res,status,xhr):
        if self.__onload is not None:
            self.__onload(GetProductInfoResponse(
                loaded=False,
                product_code=self.product_code,
                message='Connection to the server not established'
            ))

    def start_load(self):
        data={
            'get_product':'ok',
            'product_code':self.product_code
        }
        jq.post(self.cable,data,self.product_info_load_complete).fail(self.product_info_load_failed)
