{
  "login": "mutation loginQuery($input:LoginInput!){ login(input:$input){ type,message,data{ login_hash,username }} }",
  "get_validator": "query getValidator($input:ValidatorInput!){ get_validator(input:$input){ type,message,data }}",
  "register":"mutation registerQuery($input:RegistrationInput!){ register(input:$input) { type,message } }",
  "get_user_list":"query getUserList($input:GetUserInfoInput!){ get_user_list(input:$input) { type,message, data{ users{ employee_no,first_name,middle_name,last_name,suffix,contact_number,email_address,profile_id,affiliate_level_id,date_registered,username,is_activated } }} } ",
  "get_user_info":"query getUserInfo($input:GetInfoByUsernameInput!){ get_user_info(input:$input) { type,message,data{ username,employee_no,first_name,middle_name,last_name,suffix,contact_number,email_address,profile_id,affiliate_level_id,date_registered,username,is_activated,is_temporary_password} } }",
  "update_account":"mutation updateAccount($input:UpdateAccountInput!){ update_account(input:$input){ type,message,data{ login_hash,username }  } }",
  "change_password":"mutation changePassword($input:ChangePasswordInput!){ change_password(input:$input){ type,message } }",
  "forgot_password":"mutation forgotPassword($input:ForgotPasswordInput!){  forgot_password(input:$input){ type,message } }",
  "is_valid_key":"mutation isValidKey($input:ValidateResetKeyInput!){ is_valid_key(input:$input){ type,message } }",
  "change_password_via_forgot":"mutation changePassword($input:ChangePasswordViaForgotInput!){  change_password_via_forgot(input:$input){ type,message} }",
  "get_branches":"query getBranches{  get_branches{  type,message, data{  branch_id, branch_code, branch_name, branch_address, open_time, close_time  } }  }",
  "add_appointment":"mutation addAppointment($input:AddAppointmentInput!){ add_appointment(input:$input){  type,message  } }",
  "get_active_appointment_by_username":"query getActiveAppointmentByUsername($input:GetAppointmentListByUsernameInput!){ get_active_appointment_by_username(input:$input){  type, message, data{  appointment_id, patient_name, patient_contact_no, email_address, branch_code, branch_name, appointment_date, start_timeslot, end_timeslot, appoint_by, is_cancelled, cancelled_date, cancelled_by, reference_code  }    }  }",
  "get_active_appointment_by_range":"query getActiveAppointmentByRange($input:GetActiveAppointmentByRangeInput!){ get_active_appointment_by_range(input:$input){  type, message, data{  appointment_id, patient_name, patient_contact_no, email_address, branch_code, branch_name, appointment_date, start_timeslot, end_timeslot, appoint_by, is_cancelled, cancelled_date, cancelled_by, reference_code  }    }  }",
  "cancel_appointment":"mutation cancelAppointment($input:CancelAppointmentInput!){ cancel_appointment(input:$input){ type, message  } }",
  "update_appointment":"mutation updateAppointment($input:UpdateAppointmentInput!){  update_appointment(input:$input){  type, message }  }",
  "get_product_class_list":"query{ get_product_class_list{ type, message, data{  class_id, class_code, class_name }  } }",
  "add_service":"mutation addService($input:AddServiceInput!){ add_service(input:$input){ type,message } }",
  "get_services":"query {get_services{ type, message, data{ service_id, product_code, product_name, class_id, class_code, class_name, image_id,file_content, file_content_type} }}",
  "delete_service":"mutation deleteService($input:DeleteServiceInput!){  delete_service(input:$input){ type, message  } }" ,
  "update_service":"mutation updateService($input:UpdateServiceInput!){ update_service(input:$input) {  type,message }  }" , 
  "get_product_by_id":"query getProductbyId($input:GetProductByIdInput!){ get_product_by_id(input:$input){ type, message, data{ service_id, file_content, product_code, product_name, class_id, class_code, class_name, product_description, image_id, file_type, file_name, file_size, file_content_type, file_content  } } }",
  "get_product_by_product_code":"query getProductbyProductCode($input:GetProductByProductCodeInput!){ get_product_by_product_code(input:$input){ type, message, data{ service_id, file_content, product_code, product_name, class_id, class_code, class_name, product_description, image_id, file_type, file_name, file_size, file_content_type, file_content  } } }"

}